{
	"name": "PL_SAP_PUR_SUB",
	"properties": {
		"description": "SAP Purchasing",
		"activities": [
			{
				"name": "CREATE_EXECUTION_INSTANCE",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[insights_batch].[usp_Insert_CTLBatch_ExecutionInstance]",
					"storedProcedureParameters": {
						"DataFactoryName": {
							"value": {
								"value": "@pipeline().DataFactory",
								"type": "Expression"
							},
							"type": "String"
						},
						"DataMovementID": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"PipelineName": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"PipelineRunID": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"PipelineTriggerName": {
							"value": {
								"value": "@pipeline().TriggerId",
								"type": "Expression"
							},
							"type": "String"
						},
						"PipelineTriggerStartTime": {
							"value": {
								"value": "@pipeline().TriggerTime",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"PipelineTriggerType": {
							"value": {
								"value": "@pipeline().TriggerType",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQLDB_LEARN_OWNER",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Get Table List",
				"description": "Purchasing Table list from ingest layer (in this case it is a virtual ingest layer created in devinsight01).",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "CREATE_EXECUTION_INSTANCE",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[insights_batch].[usp_select_source_table]",
						"storedProcedureParameters": {
							"SourceName": {
								"type": "String",
								"value": {
									"value": "@variables('SOURCE_NAME')",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "DS_SQLDB_LEARN_GENERIC",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "For Each Table",
				"description": "ForEach iteraton to loop table and mappings for copy activity.",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Table List",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Table List').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Retrieve columns of table",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderStoredProcedureName": "[insights_batch].[TableSchema2JSON_sap-shared]",
									"storedProcedureParameters": {
										"TableName": {
											"type": "String",
											"value": {
												"value": "@item().TableName",
												"type": "Expression"
											}
										}
									},
									"queryTimeout": "02:00:00"
								},
								"dataset": {
									"referenceName": "DS_SQLDB_LEARN_GENERIC",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "Truncate curated table",
							"description": "Truncate the table in the curated schema before loading new data, e.g. [dlcur].[sap.ecc.ekko].",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Retrieve columns of table",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[insights_batch].[usp_truncate_table]",
								"storedProcedureParameters": {
									"SourceName": {
										"value": {
											"value": "@variables('SOURCE_NAME')",
											"type": "Expression"
										},
										"type": "String"
									},
									"TableName": {
										"value": {
											"value": "item().TableName",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQLDB_LEARN_OWNER",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Copy Raw to Curated",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Truncate curated table",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"queryTimeout": "02:00:00"
								},
								"sink": {
									"type": "AzureSqlSink"
								},
								"enableStaging": false,
								"enableSkipIncompatibleRow": true,
								"translator": {
									"value": "@json(string(activity('Retrieve columns of table').output.firstRow.Columns))",
									"type": "Expression"
								}
							},
							"inputs": [
								{
									"referenceName": "DS_SQLDB_LEARN_SOURCE",
									"type": "DatasetReference",
									"parameters": {
										"cw_tables": "item().TableName"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_SQLDB_LEARN_SINK",
									"type": "DatasetReference",
									"parameters": {
										"cw_tables": {
											"value": "@item().TableName",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Log Successful Table Copy",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[insights_batch].[usp_Upsert_CTLBatch_DataLoadRegister]",
								"storedProcedureParameters": {
									"DataMovementID": {
										"value": {
											"value": "@pipeline().parameters.DATA_MOVEMENT_ID",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"dataRead": {
										"value": "",
										"type": "Int64"
									},
									"dataWritten": {
										"value": "",
										"type": "Int64"
									},
									"IsProcessed": {
										"value": "",
										"type": "Boolean"
									},
									"ItemName": {
										"value": "",
										"type": "String"
									},
									"Message": {
										"value": "",
										"type": "String"
									},
									"rowsCURDel": {
										"value": "",
										"type": "Int64"
									},
									"rowsCURIns": {
										"value": "",
										"type": "Int64"
									},
									"rowsCURUpd": {
										"value": "",
										"type": "Int64"
									},
									"rowsRAWMerged": {
										"value": "",
										"type": "Int64"
									},
									"rowsRead": {
										"value": "",
										"type": "Int64"
									},
									"rowsWritten": {
										"value": "",
										"type": "Int64"
									},
									"Source": {
										"value": "",
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQLDB_LEARN_OWNER",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			}
		],
		"parameters": {
			"DATA_MOVEMENT_ID": {
				"type": "string",
				"defaultValue": "fab11111-08cd-4119-906f-e36c10227a1d"
			}
		},
		"variables": {
			"SOURCE_NAME": {
				"type": "String",
				"defaultValue": "SAP_PUR"
			}
		},
		"annotations": []
	}
}